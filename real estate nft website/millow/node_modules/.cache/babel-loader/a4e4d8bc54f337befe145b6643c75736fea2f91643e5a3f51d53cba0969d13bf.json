{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coldp\\\\Desktop\\\\real estate nft website\\\\millow\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers'; // connects project to the blockchain\n\n// Components\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport Home from './components/Home';\n\n// ABIs\nimport RealEstate from './abis/RealEstate.json';\nimport Escrow from './abis/Escrow.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null); // read and set state of metamask account\n\n  const loadBLockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // allows metamask window\n    console.log(provider);\n    window.ethereum.on('accountsChanged', async () => {\n      // when user enters metamask\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = ethers.utils.getAddress(accounts[0]); // grab the first address\n      setAccount(account); // grab the metamask account\n      console.log(account);\n    });\n  };\n  useEffect(() => {\n    loadBLockchainData(); // calls blockchain loader\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__section\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Welcome to Millow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"86F8VZ8lfjh6tQB+p37fx1M0D7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Search","Home","RealEstate","Escrow","config","jsxDEV","_jsxDEV","App","_s","account","setAccount","loadBLockchainData","provider","providers","Web3Provider","window","ethereum","console","log","on","accounts","request","method","utils","getAddress","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/coldp/Desktop/real estate nft website/millow/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers'; // connects project to the blockchain\r\n\r\n// Components\r\nimport Navigation from './components/Navigation';\r\nimport Search from './components/Search';\r\nimport Home from './components/Home';\r\n\r\n// ABIs\r\nimport RealEstate from './abis/RealEstate.json'\r\nimport Escrow from './abis/Escrow.json'\r\n\r\n// Config\r\nimport config from './config.json';\r\n\r\nfunction App() {\r\n\r\n  const [account, setAccount] = useState(null) // read and set state of metamask account\r\n\r\n  const loadBLockchainData = async () => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum) // allows metamask window\r\n    console.log(provider)\r\n  \r\n    window.ethereum.on('accountsChanged', async () => { // when user enters metamask\r\n      const accounts = await window.ethereum.request({method: 'eth_requestAccounts'})\r\n      const account = ethers.utils.getAddress(accounts[0]) // grab the first address\r\n      setAccount(account) // grab the metamask account\r\n      console.log(account)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadBLockchainData() // calls blockchain loader\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Navigation account={account} setAccount={setAccount} />\r\n\r\n      <div className='cards__section'>\r\n\r\n        <h3>Welcome to Millow</h3>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAC;;AAEjC;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AACA,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,MAAM,MAAM,oBAAoB;;AAEvC;AACA,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,EAAC;;EAE7C,MAAMc,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,QAAQ,GAAG,IAAId,MAAM,CAACe,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC,EAAC;IACpEC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IAErBG,MAAM,CAACC,QAAQ,CAACG,EAAE,CAAC,iBAAiB,EAAE,YAAY;MAAE;MAClD,MAAMC,QAAQ,GAAG,MAAML,MAAM,CAACC,QAAQ,CAACK,OAAO,CAAC;QAACC,MAAM,EAAE;MAAqB,CAAC,CAAC;MAC/E,MAAMb,OAAO,GAAGX,MAAM,CAACyB,KAAK,CAACC,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC;MACrDV,UAAU,CAACD,OAAO,CAAC,EAAC;MACpBQ,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACde,kBAAkB,CAAC,CAAC,EAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAmB,QAAA,gBAEEnB,OAAA,CAACP,UAAU;MAACU,OAAO,EAAEA,OAAQ;MAACC,UAAU,EAAEA;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExDvB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAE7BnB,OAAA;QAAAmB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACrB,EAAA,CAjCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}